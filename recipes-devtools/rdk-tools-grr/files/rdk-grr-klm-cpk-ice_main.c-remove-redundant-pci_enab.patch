From fc193cc1fee4980318ce9fd99c4deb8641b7beac Mon Sep 17 00:00:00 2001
From: Yongxin Liu <yongxin.liu@windriver.com>
Date: Wed, 20 Mar 2024 09:03:22 +0000
Subject: [PATCH] rdk/grr: klm/cpk/ice_main.c: remove redundant pci_enable_pcie_error_reporting()

pci_enable_pcie_error_reporting() enables the device to send ERR_*
Messages.  Since f26e58bf6f54 ("PCI/AER: Enable error reporting when
AER is native"), the PCI core does this for all devices during enumeration.

Remove the redundant pci_enable_pcie_error_reporting() call from the
driver. Also remove the corresponding pci_disable_pcie_error_reporting()
from the driver .remove() path.

Note that this doesn't control interrupt generation by the Root Port; that
is controlled by the AER Root Error Command register, which is managed by
the AER service driver.

Upstream-Status: Inappropriate [RDK is released in tarball only]

Signed-off-by: Yongxin Liu <yongxin.liu@windriver.com>
---
 klm/cpk/ice_main.c                                  | 4 ----
 klm/qat/qat/drivers/crypto/qat/qat_common/adf_aer.c | 3 ---
 2 files changed, 7 deletions(-)

diff --git a/klm/cpk/ice_main.c b/klm/cpk/ice_main.c
index 7cba5f5..16cc192 100644
--- a/klm/cpk/ice_main.c
+++ b/klm/cpk/ice_main.c
@@ -808,7 +808,6 @@ static void ice_remove_recovery_mode(struct ice_pf *pf)
 	}
 
 	ice_reset(&pf->hw, ICE_RESET_CORER);
-	pci_disable_pcie_error_reporting(pf->pdev);
 #ifndef HAVE_DEVLINK_NOTIFY_REGISTER
 	ice_devlink_unregister(pf);
 #endif /* !HAVE_DEVLINK_NOTIFY_REGISTER */
@@ -4424,7 +4423,6 @@ ice_probe(struct pci_dev *pdev, const struct pci_device_id __always_unused *ent)
 		return err;
 	}
 
-	pci_enable_pcie_error_reporting(pdev);
 	pci_set_master(pdev);
 
 	pf->pdev = pdev;
@@ -4736,7 +4734,6 @@ err_rec_mode:
 #ifndef HAVE_DEVLINK_NOTIFY_REGISTER
 	ice_devlink_unregister(pf);
 #endif /* !HAVE_DEVLINK_NOTIFY_REGISTER */
-	pci_disable_pcie_error_reporting(pdev);
 	pci_disable_device(pdev);
 	return err;
 }
@@ -4894,7 +4891,6 @@ static void ice_remove(struct pci_dev *pdev)
 #endif /* !HAVE_DEVLINK_NOTIFY_REGISTER */
 	ice_debugfs_pf_exit(pf);
 	ice_clear_interrupt_scheme(pf);
-	pci_disable_pcie_error_reporting(pdev);
 	pci_disable_device(pdev);
 }
 
diff --git a/klm/qat/qat/drivers/crypto/qat/qat_common/adf_aer.c b/klm/qat/qat/drivers/crypto/qat/qat_common/adf_aer.c
index 99c3226..d614906 100644
--- a/klm/qat/qat/drivers/crypto/qat/qat_common/adf_aer.c
+++ b/klm/qat/qat/drivers/crypto/qat/qat_common/adf_aer.c
@@ -449,7 +449,6 @@ int adf_enable_aer(struct adf_accel_dev *accel_dev, struct pci_driver *adf)
 	struct pci_dev *pdev = accel_to_pci_dev(accel_dev);
 
 	adf->err_handler = (struct pci_error_handlers *)(&adf_err_handler);
-	pci_enable_pcie_error_reporting(pdev);
 	return 0;
 }
 EXPORT_SYMBOL_GPL(adf_enable_aer);
@@ -467,8 +466,6 @@ EXPORT_SYMBOL_GPL(adf_enable_aer);
 void adf_disable_aer(struct adf_accel_dev *accel_dev)
 {
 	struct pci_dev *pdev = accel_to_pci_dev(accel_dev);
-
-	pci_disable_pcie_error_reporting(pdev);
 }
 EXPORT_SYMBOL_GPL(adf_disable_aer);
 
-- 
2.39.3

